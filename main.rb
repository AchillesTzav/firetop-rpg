require_relative 'initial_stats'

class Game
  def initialize
    @running = true
  end

  def start_game
    title_screen
  end

  def exit_game
    puts '
                          _______  _______  _______  ______   ______            _______
                         (  ____ \(  ___  )(  ___  )(  __  \ (  ___ \ |\     /|(  ____ \
                         | (    \/| (   ) || (   ) || (  \  )| (   ) )( \   / )| (    \/
   _____  _____  _____   | |      | |   | || |   | || |   ) || (__/ /  \ (_) / | (__       _____  _____  _____
  (_____)(_____)(_____)  | | ____ | |   | || |   | || |   | ||  __ (    \   /  |  __)     (_____)(_____)(_____)
                         | | \_  )| |   | || |   | || |   ) || (  \ \    ) (   | (
                         | (___) || (___) || (___) || (__/  )| )___) )   | |   | (____/\
                         (_______)(_______)(_______)(______/ |/ \___/    \_/   (_______/

    '
    @running = false
  end

  def running?
    @running
  end


end



def title_screen
  puts '

                       _________          _______
                       \__   __/|\     /|(  ____ \
                          ) (   | )   ( || (    \/
 _____  _____  _____      | |   | (___) || (__       _____  _____  _____
(_____)(_____)(_____)     | |   |  ___  ||  __)     (_____)(_____)(_____)
                          | |   | (   ) || (
                          | |   | )   ( || (____/\
                          )_(   |/     \|(_______/

          _______  _______  _        _______  _______  _            _______  _______
|\     /|(  ___  )(  ____ )( \      (  ___  )(  ____ \| \    /\    (  ___  )(  ____ \
| )   ( || (   ) || (    )|| (      | (   ) || (    \/|  \  / /    | (   ) || (    \/
| | _ | || (___) || (____)|| |      | |   | || |      |  (_/ /     | |   | || (__
| |( )| ||  ___  ||     __)| |      | |   | || |      |   _ (      | |   | ||  __)
| || || || (   ) || (\ (   | |      | |   | || |      |  ( \ \     | |   | || (
| () () || )   ( || ) \ \__| (____/\| (___) || (____/\|  /  \ \    | (___) || )
(_______)|/     \||/   \__/(_______/(_______)(_______/|_/    \/    (_______)|/

 _______ _________ _______  _______ _________ _______  _______      _______  _______           _       _________ _______ _________ _
(  ____ \\__   __/(  ____ )(  ____ \\__   __/(  ___  )(  ____ )    (       )(  ___  )|\     /|( (    /|\__   __/(  ___  )\__   __/( (    /|
| (    \/   ) (   | (    )|| (    \/   ) (   | (   ) || (    )|    | () () || (   ) || )   ( ||  \  ( |   ) (   | (   ) |   ) (   |  \  ( |
| (__       | |   | (____)|| (__       | |   | |   | || (____)|    | || || || |   | || |   | ||   \ | |   | |   | (___) |   | |   |   \ | |
|  __)      | |   |     __)|  __)      | |   | |   | ||  _____)    | |(_)| || |   | || |   | || (\ \) |   | |   |  ___  |   | |   | (\ \) |
| (         | |   | (\ (   | (         | |   | |   | || (          | |   | || |   | || |   | || | \   |   | |   | (   ) |   | |   | | \   |
| )      ___) (___| ) \ \__| (____/\   | |   | (___) || )          | )   ( || (___) || (___) || )  \  |   | |   | )   ( |___) (___| )  \  |
|/       \_______/|/   \__/(_______/   )_(   (_______)|/           |/     \|(_______)(_______)|/    )_)   )_(   |/     \|\_______/|/    )_)

                        ______   _______  _______  _______
                       (  __  \ (  ____ \(       )(  ___  )
                       | (  \  )| (    \/| () () || (   ) |
 _____  _____  _____   | |   ) || (__    | || || || |   | |   _____  _____  _____
(_____)(_____)(_____)  | |   | ||  __)   | |(_)| || |   | |  (_____)(_____)(_____)
                       | |   ) || (      | |   | || |   | |
                       | (__/  )| (____/\| )   ( || (___) |
                       (______/ (_______/|/     \|(_______)


    '

  puts "Type 'start' to begin your adventure or 'exit' to quit."

end



def process_player_response(game, player_response)
  actions = {
      "start" => -> {
        puts "Before embarking on your adventure it is necessary to calculate your stats!"

        #get stats from InitialStats class
        initial_stats = InitialStats.new
        stats = ['skill', 'stamina', 'luck']
        stats.each { |stat| puts  initial_stats.send("calculate_#{stat}") }
      },
      "exit" => -> {
        game.exit_game
      },
    }

    action = actions[player_response] || -> { puts "invalid option"}
    action.call
end





def game_loop
  # start the game
  game  = Game.new
  game.start_game

  while game.running?
    print "> "
    player_response = gets.chomp.downcase

    process_player_response(game, player_response)

  end
end

game_loop


